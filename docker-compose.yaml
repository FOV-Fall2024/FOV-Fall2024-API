services:
  fov.presentation:
    container_name: fov_api
    image: ${DOCKER_REGISTRY-}fovpresentation
    build:
      context: .
      dockerfile: src/FOV.Presentation/Dockerfile
    depends_on:
      - database
      - redis
    ports:
      - "5000:5000"
      - "5001:5001"
      - "8080:8080"
      - "8081:8081"
    environment:
      - "/etc/timezone:/etc/timezone:ro" 
      - "/etc/localtime:/etc/localtime:ro"
      - CONNECTIONSTRINGS__PostgresConnection=Server=fov_database;Port=5432;Database=RestaurantManagementDatabase;Username=admin;Password=admin;
      - CONNECTIONSTRINGS__RedisConnection=Server=redis:6380
    volumes:
      - data-protection-keys:/home/app/.aspnet/DataProtection-Keys
    networks:
      - monitoring

  database:
    image: postgres:15
    container_name: fov_database
    restart: always
    environment:
     POSTGRES_USER: admin
     POSTGRES_PASSWORD: admin
     POSTGRES_DB: RestaurantManagementDatabase
    volumes:
     - ./.containers/products-db:/var/lib/postgresql/data
    ports:
     - "5433:5432"
    networks:
    - monitoring

  redis:
    image: redis:7.0.12
    container_name: redis-cache
    ports:
      - "6380:6379"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/docker/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  elasticsearch:
    container_name: els
    image: elasticsearch:8.15.0
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    networks:
      - monitoring

  kibana:
    container_name: kibana
    image: kibana:8.15.0
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - monitoring

networks:
  monitoring:
    name: monitoring
    driver: bridge

volumes:
  elasticsearch-data:
  data-protection-keys:
